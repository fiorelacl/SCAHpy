# Reading a Single File {.unnumbered}

In this tutorial, we will guide you through the process of analyzing output data from the WRF (Weather Research and Forecasting) model and creating 2D maps featuring rainfall and wind variables using the `scahpy` package. To begin, let's import the package.

```python
from scahpy import in_out
```


## Step 1: Reading WRF Data

We start by assigning the absolute path of the output file we want to work with to a variable (in this case, `file_name`).

```python
file_name = '/data/datos/COW/OUT_DIAG_WRF/wrfouts/wrfout_d01_2023-03-10_03:00:00'
```

 Since we can use the `drop_variables` argument when reading netCDF files, specifying the list of variables that will not be read, we utilize the `_drop_wrf_vars` function. This function generates a list containing all the variables present in the output file and removes the ones we are not interested in (in this case: 'RAINC', 'RAINNC', 'RAINSH', 'U10', 'V10', 'SSTSK'). To use this we assign to the `vars` variable the list of variables we are interested in. We use the `ds_wrf_single` function to read only the variables of interest, which takes the file name as input, the list of variables to be removed, the time difference if necessary, and the sign of the time difference (-1 if negative, 1 if positive). The result is an `xarray.Dataset` containing longitude, latitude, time, and the selected variables. Additionally, if you wish to export the netCDF, you can specify the save path.

```python
vars = in_out._drop_wrf_vars(file_name, ['RAINC', 'RAINNC', 'RAINSH', 'U10', 'V10', 'SSTSK'])
ds = in_out.ds_wrf_single(file_name, vars, '5 hours', -1)
```

## Step 2: Calculating Precipitation and Wind Speed

Now, let's calculate precipitation using the `met_diag` module.

```python
ds_sfc = met_diag.calc_pp(ds,elim=True)
ds_sfc = met_diag.calc_wsp(ds_sfc,elim=False)
ds_sfc = met_diag.calc_celsius(ds_sfc,'SSTSK')
```

## Step 3: Plotting Precipitation Maps

Now, let's create precipitation maps for selected months using the `map_pp_uv10_sst` function.

```python
# Example usage
levs = [1,2,3,5,7,11,15,20,25,30,35,40,45,50,55,60]
levs2 = [26, 27, 28]

map_pp_uv10_sst(ds_sfc['PP'], ds_sfc, levs, levs2, shapefile=None, 
                          output_path='.', freq = 'H',
                          save_maps=True, quiverkey_speed=10, extent=None)
```

This tutorial guides you through the steps of reading WRF data, calculating precipitation, performing temporal aggregation, and creating precipitation maps using the `scahpy` package.




